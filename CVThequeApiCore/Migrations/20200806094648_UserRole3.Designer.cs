// <auto-generated />
using System;
using CVTheque.data.DataContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CVTheque.api.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20200806094648_UserRole3")]
    partial class UserRole3
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0-preview.7.20365.15");

            modelBuilder.Entity("CVTheque.core.Models.LanguageLevel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("LanguageLevels");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsDelete = true,
                            Name = "bon"
                        });
                });

            modelBuilder.Entity("CVTheque.core.Models.Level", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Levels");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsDelete = true,
                            Name = "bon"
                        });
                });

            modelBuilder.Entity("CVTheque.core.Models.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            IsDelete = true,
                            Name = "Admin"
                        },
                        new
                        {
                            Id = 2,
                            IsDelete = true,
                            Name = "Developer"
                        },
                        new
                        {
                            Id = 3,
                            IsDelete = true,
                            Name = "Recruiter"
                        },
                        new
                        {
                            Id = 4,
                            IsDelete = true,
                            Name = "Visitor"
                        });
                });

            modelBuilder.Entity("CVTheque.core.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Firstname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("Lastname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("Password")
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Firstname = "David",
                            IsDelete = false,
                            Lastname = "Desmette",
                            Mail = "ddesmette@alterinfo.be",
                            Password = new byte[] { 69, 100, 117, 99, 97, 115, 115, 105, 115, 116, 49, 50, 51, 44 },
                            PasswordSalt = new byte[] { 108, 37, 107, 139, 88, 112, 27, 169, 165, 12, 112, 222, 193, 106, 212, 133, 55, 19, 48, 91, 135, 245, 84, 56, 98, 105, 2, 238, 121, 218, 186, 76, 55, 235, 130, 64, 112, 201, 93, 25, 105, 232, 23, 190, 172, 244, 152, 48, 41, 237, 78, 120, 247, 206, 206, 64, 74, 16, 252, 207, 233, 237, 245, 79, 9, 247, 233, 31, 88, 80, 72, 242, 156, 199, 93, 39, 220, 230, 28, 82, 111, 181, 86, 190, 224, 118, 69, 52, 171, 47, 160, 191, 44, 19, 151, 235, 190, 55, 138, 16, 113, 47, 60, 231, 6, 251, 23, 225, 124, 85, 100, 170, 135, 81, 102, 250, 16, 213, 155, 6, 106, 37, 24, 115, 80, 157, 110, 151 },
                            Username = "David"
                        });
                });

            modelBuilder.Entity("CVTheque.core.Models.UserRole", b =>
                {
                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("RoleId", "UserId");

                    b.HasIndex("UserId");

                    b.ToTable("UserRoles");

                    b.HasData(
                        new
                        {
                            RoleId = 1,
                            UserId = 1
                        });
                });

            modelBuilder.Entity("CVTheque.core.Models.UserRole", b =>
                {
                    b.HasOne("CVTheque.core.Models.Role", "role")
                        .WithMany("UserRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CVTheque.core.Models.User", "user")
                        .WithMany("UserRoles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
